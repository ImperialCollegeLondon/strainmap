{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"StrainMap \u00a4 Copyright (c) 2022, Imperial College London All rights reserved. StrainMap provides a user-friendly and efficient way to analyse MRI data acquired with a novel, high temporal and spatial resolution velocity-encoded MRI technique suitable for regional strain analysis in a short breath-hold. These images include magnitude and phase components. The segmentation stage lets the user select the inner and outer walls of the heart. This needs to be done for all images taken over a heartbeat and for as many slices (cross-sections of the heart) as available. The process can be manual \u2013 very long \u2013 or assisted by several machine learning technologies such as snakes segmentation or a deep neural network. The segmented heart, together with the phase information can be used in the next stage to extract information of the instantaneous, spatially-resolved velocity of the myocardium during the heartbeat in the form of velocity curves ad heatmaps. All this information can be exported for further analysis elsewhere. Installation \u00a4 Recommended way \u00a4 The recommended way for end users to access and use the tool is via pipx : Install and configure pipx following the instructions appropriate for your operative system. Make sure it works well before moving on. Install StrainMap with pipx install strainmap . It might take a while to complete, but afterwards updates should be pretty fast. To run StrainMap just open a terminal and execute strainmap . You might want to create a shortcut for this command in the desktop, for convenience. Whenever there is a new version of StrainMap, just run pipx upgrade strainmap and it will be downloaded and installed with no fuss. Use a StrainMap executable \u00a4 Alternatively, you can download from the release page the self-contained executable corresponding to the version you are interested in. Bear in mind that these executables contain StrainMap and all its dependencies , meaning that each download can be, potentially, very large. For developers \u00a4 This installation instructions assume the following pre-requisites: Python >=3.8 Poetry >= 1.11 Git If these are already installed and the path correctly configured, the following should download the last version of StrainMap, create and activate a virtual environment, install all StrainMap dependencies and, finally, install StrainMap itself in development mode. git clone https://github.com/ImperialCollegeLondon/strainmap.git cd strainmap poetry install To use StrainMap simply run: poetry run python -m strainmap Related projects \u00a4 The following two projects are standalone tools used to collect the data needed to train the AI used by StrainMap and re-train it, when needed. They are separate from StrainMap and are not required for using it. AI Trainer Files Harvester","title":"Home"},{"location":"#strainmap","text":"Copyright (c) 2022, Imperial College London All rights reserved. StrainMap provides a user-friendly and efficient way to analyse MRI data acquired with a novel, high temporal and spatial resolution velocity-encoded MRI technique suitable for regional strain analysis in a short breath-hold. These images include magnitude and phase components. The segmentation stage lets the user select the inner and outer walls of the heart. This needs to be done for all images taken over a heartbeat and for as many slices (cross-sections of the heart) as available. The process can be manual \u2013 very long \u2013 or assisted by several machine learning technologies such as snakes segmentation or a deep neural network. The segmented heart, together with the phase information can be used in the next stage to extract information of the instantaneous, spatially-resolved velocity of the myocardium during the heartbeat in the form of velocity curves ad heatmaps. All this information can be exported for further analysis elsewhere.","title":"StrainMap"},{"location":"#installation","text":"","title":"Installation"},{"location":"#recommended-way","text":"The recommended way for end users to access and use the tool is via pipx : Install and configure pipx following the instructions appropriate for your operative system. Make sure it works well before moving on. Install StrainMap with pipx install strainmap . It might take a while to complete, but afterwards updates should be pretty fast. To run StrainMap just open a terminal and execute strainmap . You might want to create a shortcut for this command in the desktop, for convenience. Whenever there is a new version of StrainMap, just run pipx upgrade strainmap and it will be downloaded and installed with no fuss.","title":"Recommended way"},{"location":"#use-a-strainmap-executable","text":"Alternatively, you can download from the release page the self-contained executable corresponding to the version you are interested in. Bear in mind that these executables contain StrainMap and all its dependencies , meaning that each download can be, potentially, very large.","title":"Use a StrainMap executable"},{"location":"#for-developers","text":"This installation instructions assume the following pre-requisites: Python >=3.8 Poetry >= 1.11 Git If these are already installed and the path correctly configured, the following should download the last version of StrainMap, create and activate a virtual environment, install all StrainMap dependencies and, finally, install StrainMap itself in development mode. git clone https://github.com/ImperialCollegeLondon/strainmap.git cd strainmap poetry install To use StrainMap simply run: poetry run python -m strainmap","title":"For developers"},{"location":"#related-projects","text":"The following two projects are standalone tools used to collect the data needed to train the AI used by StrainMap and re-train it, when needed. They are separate from StrainMap and are not required for using it. AI Trainer Files Harvester","title":"Related projects"},{"location":"reference/SUMMARY/","text":"strainmap controller coordinates entrypoints exceptions gui base_window_and_task data_view figure_actions figure_actions_manager markers_figure segmentation_view velocities_view models ai_segmenter contour_mask filters legacy propagators readers segmentation snakes_segmenter strainmap_data_model transformations velocities writers tools","title":"SUMMARY"},{"location":"reference/strainmap/","text":"::: strainmap","title":"Index"},{"location":"reference/strainmap/controller/","text":"::: strainmap.controller","title":"Controller"},{"location":"reference/strainmap/coordinates/","text":"::: strainmap.coordinates","title":"Coordinates"},{"location":"reference/strainmap/entrypoints/","text":"::: strainmap.entrypoints","title":"Entrypoints"},{"location":"reference/strainmap/exceptions/","text":"::: strainmap.exceptions","title":"Exceptions"},{"location":"reference/strainmap/tools/","text":"::: strainmap.tools","title":"Tools"},{"location":"reference/strainmap/gui/","text":"::: strainmap.gui","title":"Index"},{"location":"reference/strainmap/gui/base_window_and_task/","text":"::: strainmap.gui.base_window_and_task","title":"Base window and task"},{"location":"reference/strainmap/gui/data_view/","text":"::: strainmap.gui.data_view","title":"Data view"},{"location":"reference/strainmap/gui/figure_actions/","text":"::: strainmap.gui.figure_actions","title":"Figure actions"},{"location":"reference/strainmap/gui/figure_actions_manager/","text":"::: strainmap.gui.figure_actions_manager","title":"Figure actions manager"},{"location":"reference/strainmap/gui/markers_figure/","text":"::: strainmap.gui.markers_figure","title":"Markers figure"},{"location":"reference/strainmap/gui/segmentation_view/","text":"::: strainmap.gui.segmentation_view","title":"Segmentation view"},{"location":"reference/strainmap/gui/velocities_view/","text":"::: strainmap.gui.velocities_view","title":"Velocities view"},{"location":"reference/strainmap/models/","text":"::: strainmap.models","title":"Index"},{"location":"reference/strainmap/models/ai_segmenter/","text":"::: strainmap.models.ai_segmenter","title":"Ai segmenter"},{"location":"reference/strainmap/models/contour_mask/","text":"::: strainmap.models.contour_mask","title":"Contour mask"},{"location":"reference/strainmap/models/filters/","text":"::: strainmap.models.filters","title":"Filters"},{"location":"reference/strainmap/models/legacy/","text":"::: strainmap.models.legacy","title":"Legacy"},{"location":"reference/strainmap/models/propagators/","text":"::: strainmap.models.propagators","title":"Propagators"},{"location":"reference/strainmap/models/readers/","text":"::: strainmap.models.readers","title":"Readers"},{"location":"reference/strainmap/models/segmentation/","text":"::: strainmap.models.segmentation","title":"Segmentation"},{"location":"reference/strainmap/models/snakes_segmenter/","text":"::: strainmap.models.snakes_segmenter","title":"Snakes segmenter"},{"location":"reference/strainmap/models/strainmap_data_model/","text":"::: strainmap.models.strainmap_data_model","title":"Strainmap data model"},{"location":"reference/strainmap/models/transformations/","text":"::: strainmap.models.transformations","title":"Transformations"},{"location":"reference/strainmap/models/velocities/","text":"::: strainmap.models.velocities","title":"Velocities"},{"location":"reference/strainmap/models/writers/","text":"::: strainmap.models.writers","title":"Writers"}]}