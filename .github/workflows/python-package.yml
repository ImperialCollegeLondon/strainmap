# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and build

on: [push, pull_request, release]

jobs:
  style:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --statistics

  test:
    needs: style
    if: github.event_name != 'release'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt -y install --no-install-recommends xvfb xauth
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .[dev]
    - name: Test with pytest (Windows and Macos)
      if: matrix.os != 'ubuntu-latest'
      run: |
        python -m pytest
    - name: Test with pytest (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        xvfb-run -a python -m pytest

  build-windows:
    needs: test
    if: github.event_name == 'release' #|| github.event_name == 'push'
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -e .[dev]
      - name: Build package
        run: |
          pyinstaller strain.windows.spec
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: Windows
          path: dist/strain.exe

  build-macos:
    needs: test
    if: github.event_name == 'release'
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -e .[dev]
      - name: Build package 
        run: |
          pyinstaller strain.mac.spec
          cd dist
          hdiutil create ./StrainMap.dmg -srcfolder strain.app -ov
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: MacOS
          path: dist/StrainMap.dmg
